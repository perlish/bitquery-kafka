syntax = "proto3";
package solana_messages;


enum BTRewardType {
  BTRewardTypeUnspecified = 0;
  BTFee = 1;
  BTRent = 2;
  BTStaking = 3;
  BTVoting = 4;
};

message BlockHeight {
    uint64 Block_height = 1;
};

message UnixTimestamp {
    int64 Timestamp = 1;
};

message BTRewards {
    repeated BTReward Rewards = 1;
};

message BTReward {
  string Pubkey = 1;
  int64 Lamports = 2;
  uint64 PostBalance = 3;
  BTRewardType RewardType = 4;
  string Commission = 5;
};

message BTReturnData {
    bytes ProgramId = 1;
    bytes Data = 2;
};

message BTUiTokenAmount {
    double UiAmount = 1;
    uint32 Decimals = 2;
    string Amount = 3;
    string UiAmountString = 4;
};

message BTTokenBalance {
    uint32 AccountIndex = 1;
    string Mint = 2;
    BTUiTokenAmount UiTokenAmount = 3;
    string Owner = 4;
    string ProgramId = 5;
};

message BTCompiledInstruction {
    uint32 ProgramIdIndex = 1;
    bytes Accounts = 2;
    bytes Data = 3;
};

message BTInnerInstructions {
    uint32 Index = 1;
    repeated BTCompiledInstruction Instructions = 2;
};

message BTTransactionError {
    bytes Err = 1;
};

message BTTransactionStatusMeta {
    BTTransactionError Err = 1;
    uint64 Fee = 2;
    repeated uint64 PreBalances = 3;
    repeated uint64 PostBalances = 4;
    repeated BTInnerInstructions InnerInstructions = 5;
    bool InnerInstructionsNone = 10;
    repeated string LogMessages = 6;
    bool LogMessagesNone = 11;
    repeated BTTokenBalance PreTokenBalances = 7;
    repeated BTTokenBalance PostTokenBalances = 8;
    repeated BTReward Rewards = 9;
    repeated bytes LoadedWritableAddresses = 12;
    repeated bytes LoadedReadonlyAddresses = 13;
    BTReturnData ReturnData = 14;
    bool ReturnDataNone = 15;
    uint64 ComputeUnitsConsumed = 16;
};

message BTMessageAddressTableLookup {
    bytes AccountKey = 1;
    bytes WritableIndexes = 2;
    bytes ReadonlyIndexes = 3;
};

message BTMessageHeader {
    uint32 NumRequiredSignatures = 1;
    uint32 NumReadonlySignedAccounts = 2;
    uint32 NumReadonlyUnsignedAccounts = 3;
};

message BTMessage {
    BTMessageHeader Header = 1;
    repeated bytes AccountKeys = 2;
    bytes RecentBlockhash = 3;
    repeated BTCompiledInstruction Instructions = 4;
    bool Versioned = 5;
    repeated BTMessageAddressTableLookup AddressTableLookups = 6;
};
    
message BTTransaction {
    repeated bytes Signatures = 1;
    BTMessage Message = 2;
};

message BTConfirmedTransaction {
    BTTransaction Transaction = 1;
    BTTransactionStatusMeta Meta = 2;
}

message BTConfirmedBlock {
  string PreviousBlockhash = 1;
  string Blockhash = 2;
  uint64 ParentSlot = 3;
  repeated BTConfirmedTransaction Transactions = 4;
  repeated BTReward Rewards = 5;
  UnixTimestamp BlockTime = 6;
  BlockHeight BlockHeight = 7;
};
